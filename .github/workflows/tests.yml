name: tests

on:
  pull_request:
    branches:
      - "main"
      - "develop"

jobs:
  test-build-arm:
    name: Run tests (ARM64)
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install GCC 14
        run: |
          echo "CC=gcc-14" >> $GITHUB_ENV
          echo "CXX=g++-14" >> $GITHUB_ENV

      - name: Configure
        run: cmake -B build -DARGON_BUILD_TESTING=YES

      - name: Run build
        run: cmake --build build

      - name: Run CTest
        run: ctest --output-on-failure --test-dir build/test/specs --output-junit results/ctest_results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test Results ARM64
          path: build/results/**/*.xml

  test-build-qemu:
    name: Run tests (ARMv7/QEMU)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install cross-compilation toolchain and QEMU
        run: |
          sudo debconf-communicate <<< "set man-db/auto-update false"
          sudo dpkg-reconfigure man-db
          sudo apt-get update
          sudo apt-get install -y gcc-14-arm-linux-gnueabihf g++-14-arm-linux-gnueabihf qemu-user binfmt-support qemu-user-static qemu-system-arm
          echo "CC=arm-linux-gnueabihf-gcc-14" >> $GITHUB_ENV
          echo "CXX=arm-linux-gnueabihf-g++-14" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/arm-linux-gnueabihf/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Symlink ld-linux
        run: sudo ln -s /usr/arm-linux-gnueabihf/lib/ld-linux-armhf.so.3 /lib/ld-linux-armhf.so.3

      - name: Configure
        run: cmake -B build -G Ninja -DARGON_BUILD_TESTING=YES -DARGON_TEST_QEMU=YES

      - name: Run build
        run: cmake --build build

      - name: Run CTest
        run: ctest --output-on-failure --test-dir build/test/specs --output-junit results/ctest_results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test Results ARMv7
          path: build/results/**/*.xml

  test-build-x86_64:
    name: Run tests (x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Use GCC 14
        run: |
          echo "CC=gcc-14" >> $GITHUB_ENV
          echo "CXX=g++-14" >> $GITHUB_ENV

      - name: Configure
        run: cmake -B build -DARGON_BUILD_TESTING=YES

      - name: Run build
        run: cmake --build build

      - name: Run CTest
        run: ctest --output-on-failure --test-dir build/test/specs --output-junit results/ctest_results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test Results x86
          path: build/results/**/*.xml


  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}
